#!perl
# Copyright 2012 Jeffrey Kegler
# This file is part of Marpa::R2.  Marpa::R2 is free software: you can
# redistribute it and/or modify it under the terms of the GNU Lesser
# General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# Marpa::R2 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser
# General Public License along with Marpa::R2.  If not, see
# http://www.gnu.org/licenses/.

use 5.010;
use strict;
use warnings;
use English qw( -no_match_vars );
use autodie;

# Portability is NOT emphasized here -- this script is part
# of the development environment, not the configuration or
# installation environment

for my $file (qw(Build.PL MANIFEST)) {
    -e $file or die "No $file: wrong directory?";
}

for my $subdir (qw(lib libmarpa t lib inc)) {
    -d $subdir or die "No $subdir/: wrong directory?";
}
chdir 'libmarpa/dev';

## no critic (InputOutput::RequireCheckedSyscalls)
( system 'make', 'install' ) == 0
    or die 'Cannot make install in libmarpa/dev';
## use critic

chdir '../../libmarpa/stage';

## no critic (InputOutput::RequireCheckedSyscalls)
( system 'make', 'dist' ) == 0 or die 'Cannot make dist in libmarpa/stage';
## use critic

## no critic(InputOutput::ProhibitBacktickOperators)
my $version_info = `./configure --version`;
## use critic

my ($version) = $version_info =~ m/\A marpa \s configure \s ([\d.]*)$/msx;

chdir q{..};    # PWD=libmarpa
if ( -d 'build' ) {
    ## no critic (InputOutput::RequireCheckedSyscalls)
    ( system 'rm', '-rf', 'build' ) == 0
        or die "rm -rf libmarpa/build failed: $ERRNO";
}
my $tar_file     = 'stage/marpa-' . $version . '.tar.gz';
my $untarred_dir = 'marpa-' . $version;
say "Tar file is $tar_file" or die 'Cannot print to STDOUT';

## no critic (InputOutput::RequireCheckedSyscalls)
( system 'tar', '-xzf', $tar_file ) == 0
    or die "Could not tar -xvzf $tar_file: $ERRNO";
## use critic

rename $untarred_dir, 'build' or die "rename failed: $ERRNO";

chdir 'build';    # PWD=libmarpa/build

